// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.23.4
// source: credit_Report.proto

package credit_report

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateCreditReportRequest message for creating a credit report
type CreateCreditReportRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                    // User who the report belongs to
	LoanApplicationId uint64                 `protobuf:"varint,2,opt,name=loan_application_id,json=loanApplicationId,proto3" json:"loan_application_id,omitempty"` // Loan application for which the report is generated
	ReportData        string                 `protobuf:"bytes,3,opt,name=report_data,json=reportData,proto3" json:"report_data,omitempty"`                         // Raw JSON or serialized report data
	CreditScore       int32                  `protobuf:"varint,4,opt,name=credit_score,json=creditScore,proto3" json:"credit_score,omitempty"`                     // Credit score from the report
	FraudIndicators   string                 `protobuf:"bytes,5,opt,name=fraud_indicators,json=fraudIndicators,proto3" json:"fraud_indicators,omitempty"`          // Fraud indicators (JSON string)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateCreditReportRequest) Reset() {
	*x = CreateCreditReportRequest{}
	mi := &file_credit_Report_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCreditReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCreditReportRequest) ProtoMessage() {}

func (x *CreateCreditReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_Report_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCreditReportRequest.ProtoReflect.Descriptor instead.
func (*CreateCreditReportRequest) Descriptor() ([]byte, []int) {
	return file_credit_Report_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCreditReportRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateCreditReportRequest) GetLoanApplicationId() uint64 {
	if x != nil {
		return x.LoanApplicationId
	}
	return 0
}

func (x *CreateCreditReportRequest) GetReportData() string {
	if x != nil {
		return x.ReportData
	}
	return ""
}

func (x *CreateCreditReportRequest) GetCreditScore() int32 {
	if x != nil {
		return x.CreditScore
	}
	return 0
}

func (x *CreateCreditReportRequest) GetFraudIndicators() string {
	if x != nil {
		return x.FraudIndicators
	}
	return ""
}

// CreateCreditReportResponse message for response after creating a credit report
type CreateCreditReportResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CreditReportId uint64                 `protobuf:"varint,1,opt,name=credit_report_id,json=creditReportId,proto3" json:"credit_report_id,omitempty"` // Unique ID of the created credit report
	Status         string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                                          // Status message (e.g., "Created successfully")
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateCreditReportResponse) Reset() {
	*x = CreateCreditReportResponse{}
	mi := &file_credit_Report_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCreditReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCreditReportResponse) ProtoMessage() {}

func (x *CreateCreditReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_Report_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCreditReportResponse.ProtoReflect.Descriptor instead.
func (*CreateCreditReportResponse) Descriptor() ([]byte, []int) {
	return file_credit_Report_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCreditReportResponse) GetCreditReportId() uint64 {
	if x != nil {
		return x.CreditReportId
	}
	return 0
}

func (x *CreateCreditReportResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// GetCreditReportRequest message to request an existing credit report
type GetCreditReportRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CreditReportId uint64                 `protobuf:"varint,1,opt,name=credit_report_id,json=creditReportId,proto3" json:"credit_report_id,omitempty"` // ID of the credit report to fetch
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetCreditReportRequest) Reset() {
	*x = GetCreditReportRequest{}
	mi := &file_credit_Report_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreditReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditReportRequest) ProtoMessage() {}

func (x *GetCreditReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_Report_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditReportRequest.ProtoReflect.Descriptor instead.
func (*GetCreditReportRequest) Descriptor() ([]byte, []int) {
	return file_credit_Report_proto_rawDescGZIP(), []int{2}
}

func (x *GetCreditReportRequest) GetCreditReportId() uint64 {
	if x != nil {
		return x.CreditReportId
	}
	return 0
}

// GetCreditReportResponse message containing the credit report details
type GetCreditReportResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          // Unique ID of the credit report
	UserId            uint64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                    // ID of the user to whom the report belongs
	LoanApplicationId uint64                 `protobuf:"varint,3,opt,name=loan_application_id,json=loanApplicationId,proto3" json:"loan_application_id,omitempty"` // ID of the loan application for which the report was generated
	ReportData        string                 `protobuf:"bytes,4,opt,name=report_data,json=reportData,proto3" json:"report_data,omitempty"`                         // Raw JSON or serialized report data
	CreditScore       int32                  `protobuf:"varint,5,opt,name=credit_score,json=creditScore,proto3" json:"credit_score,omitempty"`                     // Credit score from the report
	FraudIndicators   string                 `protobuf:"bytes,6,opt,name=fraud_indicators,json=fraudIndicators,proto3" json:"fraud_indicators,omitempty"`          // Fraud indicators (JSON string)
	GeneratedAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`                      // Timestamp when the report was generated
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetCreditReportResponse) Reset() {
	*x = GetCreditReportResponse{}
	mi := &file_credit_Report_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreditReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditReportResponse) ProtoMessage() {}

func (x *GetCreditReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_Report_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditReportResponse.ProtoReflect.Descriptor instead.
func (*GetCreditReportResponse) Descriptor() ([]byte, []int) {
	return file_credit_Report_proto_rawDescGZIP(), []int{3}
}

func (x *GetCreditReportResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCreditReportResponse) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetCreditReportResponse) GetLoanApplicationId() uint64 {
	if x != nil {
		return x.LoanApplicationId
	}
	return 0
}

func (x *GetCreditReportResponse) GetReportData() string {
	if x != nil {
		return x.ReportData
	}
	return ""
}

func (x *GetCreditReportResponse) GetCreditScore() int32 {
	if x != nil {
		return x.CreditScore
	}
	return 0
}

func (x *GetCreditReportResponse) GetFraudIndicators() string {
	if x != nil {
		return x.FraudIndicators
	}
	return ""
}

func (x *GetCreditReportResponse) GetGeneratedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

var File_credit_Report_proto protoreflect.FileDescriptor

const file_credit_Report_proto_rawDesc = "" +
	"\n" +
	"\x13credit_Report.proto\x12\rcredit_report\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd3\x01\n" +
	"\x19CreateCreditReportRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12.\n" +
	"\x13loan_application_id\x18\x02 \x01(\x04R\x11loanApplicationId\x12\x1f\n" +
	"\vreport_data\x18\x03 \x01(\tR\n" +
	"reportData\x12!\n" +
	"\fcredit_score\x18\x04 \x01(\x05R\vcreditScore\x12)\n" +
	"\x10fraud_indicators\x18\x05 \x01(\tR\x0ffraudIndicators\"^\n" +
	"\x1aCreateCreditReportResponse\x12(\n" +
	"\x10credit_report_id\x18\x01 \x01(\x04R\x0ecreditReportId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"B\n" +
	"\x16GetCreditReportRequest\x12(\n" +
	"\x10credit_report_id\x18\x01 \x01(\x04R\x0ecreditReportId\"\xa0\x02\n" +
	"\x17GetCreditReportResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x04R\x06userId\x12.\n" +
	"\x13loan_application_id\x18\x03 \x01(\x04R\x11loanApplicationId\x12\x1f\n" +
	"\vreport_data\x18\x04 \x01(\tR\n" +
	"reportData\x12!\n" +
	"\fcredit_score\x18\x05 \x01(\x05R\vcreditScore\x12)\n" +
	"\x10fraud_indicators\x18\x06 \x01(\tR\x0ffraudIndicators\x12=\n" +
	"\fgenerated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vgeneratedAt2\xe2\x01\n" +
	"\x13CreditReportService\x12i\n" +
	"\x12CreateCreditReport\x12(.credit_report.CreateCreditReportRequest\x1a).credit_report.CreateCreditReportResponse\x12`\n" +
	"\x0fGetCreditReport\x12%.credit_report.GetCreditReportRequest\x1a&.credit_report.GetCreditReportResponseB%Z#Backend/created_proto/credit_reportb\x06proto3"

var (
	file_credit_Report_proto_rawDescOnce sync.Once
	file_credit_Report_proto_rawDescData []byte
)

func file_credit_Report_proto_rawDescGZIP() []byte {
	file_credit_Report_proto_rawDescOnce.Do(func() {
		file_credit_Report_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_credit_Report_proto_rawDesc), len(file_credit_Report_proto_rawDesc)))
	})
	return file_credit_Report_proto_rawDescData
}

var file_credit_Report_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_credit_Report_proto_goTypes = []any{
	(*CreateCreditReportRequest)(nil),  // 0: credit_report.CreateCreditReportRequest
	(*CreateCreditReportResponse)(nil), // 1: credit_report.CreateCreditReportResponse
	(*GetCreditReportRequest)(nil),     // 2: credit_report.GetCreditReportRequest
	(*GetCreditReportResponse)(nil),    // 3: credit_report.GetCreditReportResponse
	(*timestamppb.Timestamp)(nil),      // 4: google.protobuf.Timestamp
}
var file_credit_Report_proto_depIdxs = []int32{
	4, // 0: credit_report.GetCreditReportResponse.generated_at:type_name -> google.protobuf.Timestamp
	0, // 1: credit_report.CreditReportService.CreateCreditReport:input_type -> credit_report.CreateCreditReportRequest
	2, // 2: credit_report.CreditReportService.GetCreditReport:input_type -> credit_report.GetCreditReportRequest
	1, // 3: credit_report.CreditReportService.CreateCreditReport:output_type -> credit_report.CreateCreditReportResponse
	3, // 4: credit_report.CreditReportService.GetCreditReport:output_type -> credit_report.GetCreditReportResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_credit_Report_proto_init() }
func file_credit_Report_proto_init() {
	if File_credit_Report_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_credit_Report_proto_rawDesc), len(file_credit_Report_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_credit_Report_proto_goTypes,
		DependencyIndexes: file_credit_Report_proto_depIdxs,
		MessageInfos:      file_credit_Report_proto_msgTypes,
	}.Build()
	File_credit_Report_proto = out.File
	file_credit_Report_proto_goTypes = nil
	file_credit_Report_proto_depIdxs = nil
}
