// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.23.4
// source: notification.proto

package notification

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserNotificationRequest) Reset() {
	*x = UserNotificationRequest{}
	mi := &file_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotificationRequest) ProtoMessage() {}

func (x *UserNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotificationRequest.ProtoReflect.Descriptor instead.
func (*UserNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{0}
}

func (x *UserNotificationRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserNotificationResponse) Reset() {
	*x = UserNotificationResponse{}
	mi := &file_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotificationResponse) ProtoMessage() {}

func (x *UserNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotificationResponse.ProtoReflect.Descriptor instead.
func (*UserNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{1}
}

func (x *UserNotificationResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Payload       string                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Read          bool                   `protobuf:"varint,5,opt,name=read,proto3" json:"read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{2}
}

func (x *Notification) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Notification) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Notification) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Notification) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Notification) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

type MarkReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId uint64                 `protobuf:"varint,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkReadRequest) Reset() {
	*x = MarkReadRequest{}
	mi := &file_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkReadRequest) ProtoMessage() {}

func (x *MarkReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkReadRequest.ProtoReflect.Descriptor instead.
func (*MarkReadRequest) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{3}
}

func (x *MarkReadRequest) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type MarkReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkReadResponse) Reset() {
	*x = MarkReadResponse{}
	mi := &file_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkReadResponse) ProtoMessage() {}

func (x *MarkReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkReadResponse.ProtoReflect.Descriptor instead.
func (*MarkReadResponse) Descriptor() ([]byte, []int) {
	return file_notification_proto_rawDescGZIP(), []int{4}
}

func (x *MarkReadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_notification_proto protoreflect.FileDescriptor

const file_notification_proto_rawDesc = "" +
	"\n" +
	"\x12notification.proto\x12\fnotification\"2\n" +
	"\x17UserNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\"\\\n" +
	"\x18UserNotificationResponse\x12@\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1a.notification.NotificationR\rnotifications\"\x89\x01\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x18\n" +
	"\apayload\x18\x03 \x01(\tR\apayload\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp\x12\x12\n" +
	"\x04read\x18\x05 \x01(\bR\x04read\":\n" +
	"\x0fMarkReadRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\x04R\x0enotificationId\"*\n" +
	"\x10MarkReadResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\xd3\x01\n" +
	"\x13NotificationService\x12e\n" +
	"\x14GetUserNotifications\x12%.notification.UserNotificationRequest\x1a&.notification.UserNotificationResponse\x12U\n" +
	"\x14MarkNotificationRead\x12\x1d.notification.MarkReadRequest\x1a\x1e.notification.MarkReadResponseB$Z\"Backend/created_proto/notificationb\x06proto3"

var (
	file_notification_proto_rawDescOnce sync.Once
	file_notification_proto_rawDescData []byte
)

func file_notification_proto_rawDescGZIP() []byte {
	file_notification_proto_rawDescOnce.Do(func() {
		file_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notification_proto_rawDesc), len(file_notification_proto_rawDesc)))
	})
	return file_notification_proto_rawDescData
}

var file_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_notification_proto_goTypes = []any{
	(*UserNotificationRequest)(nil),  // 0: notification.UserNotificationRequest
	(*UserNotificationResponse)(nil), // 1: notification.UserNotificationResponse
	(*Notification)(nil),             // 2: notification.Notification
	(*MarkReadRequest)(nil),          // 3: notification.MarkReadRequest
	(*MarkReadResponse)(nil),         // 4: notification.MarkReadResponse
}
var file_notification_proto_depIdxs = []int32{
	2, // 0: notification.UserNotificationResponse.notifications:type_name -> notification.Notification
	0, // 1: notification.NotificationService.GetUserNotifications:input_type -> notification.UserNotificationRequest
	3, // 2: notification.NotificationService.MarkNotificationRead:input_type -> notification.MarkReadRequest
	1, // 3: notification.NotificationService.GetUserNotifications:output_type -> notification.UserNotificationResponse
	4, // 4: notification.NotificationService.MarkNotificationRead:output_type -> notification.MarkReadResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_notification_proto_init() }
func file_notification_proto_init() {
	if File_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notification_proto_rawDesc), len(file_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_proto_goTypes,
		DependencyIndexes: file_notification_proto_depIdxs,
		MessageInfos:      file_notification_proto_msgTypes,
	}.Build()
	File_notification_proto = out.File
	file_notification_proto_goTypes = nil
	file_notification_proto_depIdxs = nil
}
