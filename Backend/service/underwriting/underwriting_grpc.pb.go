// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package underwriting

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UnderwritingServiceClient is the client API for UnderwritingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UnderwritingServiceClient interface {
	EvaluateLoan(ctx context.Context, in *UnderwritingRequest, opts ...grpc.CallOption) (*UnderwritingResponse, error)
}

type underwritingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUnderwritingServiceClient(cc grpc.ClientConnInterface) UnderwritingServiceClient {
	return &underwritingServiceClient{cc}
}

func (c *underwritingServiceClient) EvaluateLoan(ctx context.Context, in *UnderwritingRequest, opts ...grpc.CallOption) (*UnderwritingResponse, error) {
	out := new(UnderwritingResponse)
	err := c.cc.Invoke(ctx, "/underwriting.UnderwritingService/EvaluateLoan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UnderwritingServiceServer is the server API for UnderwritingService service.
// All implementations must embed UnimplementedUnderwritingServiceServer
// for forward compatibility
type UnderwritingServiceServer interface {
	EvaluateLoan(context.Context, *UnderwritingRequest) (*UnderwritingResponse, error)
	mustEmbedUnimplementedUnderwritingServiceServer()
}

// UnimplementedUnderwritingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedUnderwritingServiceServer struct {
}

func (UnimplementedUnderwritingServiceServer) EvaluateLoan(context.Context, *UnderwritingRequest) (*UnderwritingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EvaluateLoan not implemented")
}
func (UnimplementedUnderwritingServiceServer) mustEmbedUnimplementedUnderwritingServiceServer() {}

// UnsafeUnderwritingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UnderwritingServiceServer will
// result in compilation errors.
type UnsafeUnderwritingServiceServer interface {
	mustEmbedUnimplementedUnderwritingServiceServer()
}

func RegisterUnderwritingServiceServer(s grpc.ServiceRegistrar, srv UnderwritingServiceServer) {
	s.RegisterService(&UnderwritingService_ServiceDesc, srv)
}

func _UnderwritingService_EvaluateLoan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnderwritingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnderwritingServiceServer).EvaluateLoan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/underwriting.UnderwritingService/EvaluateLoan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnderwritingServiceServer).EvaluateLoan(ctx, req.(*UnderwritingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UnderwritingService_ServiceDesc is the grpc.ServiceDesc for UnderwritingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UnderwritingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "underwriting.UnderwritingService",
	HandlerType: (*UnderwritingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EvaluateLoan",
			Handler:    _UnderwritingService_EvaluateLoan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/underwriting.proto",
}
